import{_ as s,c as a,o as i,a3 as e}from"./chunks/framework.D5qxx6u8.js";const E=JSON.parse('{"title":"Handlers","description":"","frontmatter":{},"headers":[],"relativePath":"components/handlers.md","filePath":"components/handlers.md","lastUpdated":1717792017000}'),n={name:"components/handlers.md"},t=e(`<h1 id="handlers" tabindex="-1">Handlers <a class="header-anchor" href="#handlers" aria-label="Permalink to &quot;Handlers&quot;">​</a></h1><p>Handler functions allow the sheet to respond to messages from the host. The <code>handlers</code> argument requires the following methods:</p><h2 id="oninit" tabindex="-1"><code>onInit</code> <a class="header-anchor" href="#oninit" aria-label="Permalink to &quot;\`onInit\`&quot;">​</a></h2><p>The <code>onInit</code> function provides the initial set of data to the sheet.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> character: Character,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> settings: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> colorTheme: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> language: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gm: boolean,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> owned: boolean,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> settingsSheet: boolean,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> headless: boolean,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sandbox: boolean,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> campaignId: number,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> environment: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentUserId: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> singleSheet: boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sharedSettings: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> compendiumDropData: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pageName: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> categoryName: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expansion: number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, dispatch: Dispatch): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>The event object contains the following:</p><ul><li><code>character</code>: The primary character for this sheet.</li><li><code>settings</code>: Campaign and character-specific settings.</li><li><code>sharedSettings</code>: Data shared between all characters in this campaign.</li><li><code>compendiumDropData</code>: Populated when the character sheet is created from a compendium entry such as a creature or NPC.</li></ul><p><strong>Note</strong>: This function may be called multiple times during development in the sheet sandbox as part of hot reloads.</p><h2 id="onchange" tabindex="-1"><code>onChange</code> <a class="header-anchor" href="#onchange" aria-label="Permalink to &quot;\`onChange\`&quot;">​</a></h2><p><code>onChange</code> is called whenever a character’s data is changed on the host’s end. The event object contains a partial character with only the character’s ID and the changed data. This could be the character’s bio, GM notes, or attributes (only the changed attributes).</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> character: Partial</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Character</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, dispatch: Dispatch): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="onsettingschange" tabindex="-1"><code>onSettingsChange</code> <a class="header-anchor" href="#onsettingschange" aria-label="Permalink to &quot;\`onSettingsChange\`&quot;">​</a></h2><p><code>onSettingsChange</code> is called when either the VTT’s color theme is changed, or when the current player’s ownership of the primary character changes.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onSettingsChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> colorTheme: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> owned: boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, dispatch: Dispatch): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="onsharedsettingschange" tabindex="-1"><code>onSharedSettingsChange</code> <a class="header-anchor" href="#onsharedsettingschange" aria-label="Permalink to &quot;\`onSharedSettingsChange\`&quot;">​</a></h2><p><code>onSharedSettingsChange</code> is called when someone changes a shared setting in the VTT.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onSharedSettingsChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ settings: { [key: string]: any } }): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="ontranslationsrequest" tabindex="-1"><code>onTranslationsRequest</code> <a class="header-anchor" href="#ontranslationsrequest" aria-label="Permalink to &quot;\`onTranslationsRequest\`&quot;">​</a></h2><p><code>onTranslationsRequest</code> is called before the relay is fully initialized and returns the translation JSON data corresponding to the two-letter language argument.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onTranslationsRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(language: string): { [key: string]: string };</span></span></code></pre></div><h2 id="ondragover-optional" tabindex="-1"><code>onDragOver</code> (optional) <a class="header-anchor" href="#ondragover-optional" aria-label="Permalink to &quot;\`onDragOver\` (optional)&quot;">​</a></h2><p><code>onDragOver</code> is called when a compendium item from the compendium tab is dragged over the iframe window containing the character sheet.</p><p>Coordinates of the drag are provided via top and left values, and basic compendium data is passed so that a subsequent compendium request can be made via the provided dispatch. If the item is moved outside of the iframe, <code>dragData</code> and <code>coordinates</code> are null.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onDragOver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> coordinates: { top: number, left: number },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dragData: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pageName: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> categoryName: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expansionId: number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, dispatch: Dispatch): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span></span></code></pre></div><h2 id="ondropover-optional" tabindex="-1"><code>onDropOver</code> (optional) <a class="header-anchor" href="#ondropover-optional" aria-label="Permalink to &quot;\`onDropOver\` (optional)&quot;">​</a></h2><p><code>onDropOver</code> is called when a compendium item from the compendium tab is dropped over the iframe window containing the character sheet.</p><p>Coordinates of the drop are provided via top and left values, and basic compendium data is passed so that a subsequent compendium request can be made via the provided dispatch.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onDropOver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> coordinates: { top: number, left: number },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dropData: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pageName: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> categoryName: string,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expansionId: number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, dispatch: Dispatch): </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span></span></code></pre></div>`,28),h=[t];function l(p,o,r,d,c,k){return i(),a("div",null,h)}const u=s(n,[["render",l]]);export{E as __pageData,u as default};
