import{_ as e,c as t,o as a,a3 as n}from"./chunks/framework.D5qxx6u8.js";const g=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"gettingstarted/introduction.md","filePath":"gettingstarted/introduction.md","lastUpdated":1717792017000}'),o={name:"gettingstarted/introduction.md"},r=n('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>The Beacon SDK is a toolset designed to enhance and streamline the development of virtual tabletop (VTT) character sheets and other interactive elements.</p><p>Whether you&#39;re a game master (GM), a developer, or a player, the Beacon SDK provides a framework to create dynamic, responsive, and fully integrated VTT experiences.</p><h2 id="what-is-the-beacon-sdk" tabindex="-1">What is the Beacon SDK? <a class="header-anchor" href="#what-is-the-beacon-sdk" aria-label="Permalink to &quot;What is the Beacon SDK?&quot;">​</a></h2><p>The Beacon SDK is a specialized software development kit for virtual tabletops.</p><p>It facilitates creating and managing interactive character sheets, roll templates, macros, and other VTT functionalities.</p><p>The SDK ensures easy communication between the VTT platform and the character sheets, allowing real-time updates and interactions.</p><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><ul><li><strong>Character Sheets</strong>: Design and implement detailed character sheets with dynamic attributes and real-time updates.</li><li><strong>Roll Mechanics</strong>: Integrate complex roll formulas and display roll results directly within the VTT.</li><li><strong>Macros</strong>: Create and manage macros for automated actions and roll calculations.</li><li><strong>Event Handling</strong>: Utilize a comprehensive set of handlers to manage various events and interactions within the VTT.</li><li><strong>Legacy Support</strong>: Convert and integrate legacy macros and roll templates with the new Beacon architecture.</li><li><strong>Customization</strong>: Define custom actions computed properties and handle specific roll templates tailored to your game&#39;s needs.</li></ul><h2 id="components-overview" tabindex="-1">Components Overview <a class="header-anchor" href="#components-overview" aria-label="Permalink to &quot;Components Overview&quot;">​</a></h2><p>The Beacon SDK is composed of several key components:</p><ul><li><strong>Actions</strong>: Define and manage custom actions that can be triggered within the VTT.</li><li><strong>Handlers</strong>: Event handlers that process and respond to various VTT events and messages.</li><li><strong>Computed Properties</strong>: Define dynamically computed properties based on other attributes.</li><li><strong>Macro Attributes</strong>: Convert and manage legacy macro attributes for compatibility with the Beacon SDK.</li><li><strong>Rolls</strong>: Implement advanced roll mechanics and display results dynamically within the VTT.</li></ul><p>For a comprehensive overview of these components, view the components section.</p><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>To get started with the Beacon SDK, you must initialize the relay, set up your character sheets, and define the necessary actions, handlers, and computed properties.</p><p>This documentation provides detailed guides and examples to help you through each step of the process.</p><p>By leveraging the Beacon SDK, you can create rich, interactive, fully integrated VTT experiences that enhance gameplay and streamline game management.</p><p>Whether adapting existing character sheets or building new ones from scratch, the Beacon SDK offers the tools and flexibility to bring your virtual tabletop to life.</p>',18),i=[r];function s(l,c,d,h,p,m){return a(),t("div",null,i)}const f=e(o,[["render",s]]);export{g as __pageData,f as default};
